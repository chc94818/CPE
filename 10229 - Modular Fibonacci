/*
矩陣快速冪作 FIBONACCI函數
[F(n+1) F(n)  ] =  [1 1]^n 
[F(n)   F(n-1)]    [1 0]
*/
#include<cstdio>
#include<cstring>
using namespace std;

long long mod;

struct mat
{
  ll v[2][2];
  mat()
  {
    memset(v, 0, sizeof(v));
  }
} m1;

mat operator * (mat a, mat b)
{
  mat c;
  for (int i = 0; i < 2; i++)
    for (int j = 0; j < 2; j++)
      for (int k = 0; k < 2; k++)
        c.v[i][j] = (c.v[i][j] + a.v[i][k] * b.v[k][j]) % mod;
  return c;
}

inline mat quickpow(mat a, int k)
{
  mat b;
  b.v[0][0] = b.v[1][1] = 1;
  while (k)
  {
    if (k & 1)
      b = b * a;
    k >>= 1;
    a = a * a;
  }
  return b;
}

int main()
{
  m1.v[0][0] = m1.v[0][1] = m1.v[1][0] = 1, m1.v[1][1] = 0;
  int n, m;
  while (~scanf("%d%d", &n, &m))
  {
    if (n == 0 || m == 0) puts("0");
    else
    {
      mod = 1 << m;
      printf("%d\n", quickpow(m1, n - 1).v[0][0]);
    }
  }
  return 0;
}
